kind: pipeline
type: docker
name: default

steps:
- name: lint
  image: python:3.8-slim
  commands:
      - pip install flake8
      - flake8

- name: publish
  image: omerxx/drone-ecr-auth
  volumes:
    - name: dockersock
      path: /var/run/docker.sock
  environment:
    ECR_ACCESS_KEY:
      from_secret: ecr_access_key
    ECR_SECRET_KEY:
      from_secret: ecr_secret_key
    ECR_REGISTRY:
      from_secret: ecr_registry
  commands:
    - $(AWS_ACCESS_KEY_ID=$ECR_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$ECR_SECRET_KEY aws ecr get-login --no-include-email --region ap-southeast-1)
    - docker build --rm=false -t $ECR_REGISTRY/gn-api-me -t $ECR_REGISTRY/gn-api-me:drone-$$DRONE_BUILD_NUMBER .
    - docker push $ECR_REGISTRY/gn-api-me:drone-$$DRONE_BUILD_NUMBER
    - docker push $ECR_REGISTRY/gn-api-me
    - docker rmi $ECR_REGISTRY/gn-api-me:drone-$$DRONE_BUILD_NUMBER

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock


#pipeline:
#  lint:
#    image: python:3.8-slim
#    pull: true
#    commands:
#      - pip install flake8
#      - flake8
#  publish:
#    pull: true
#    image: plugins/ecr
#    settings:
#      access_key:
#        from_secret: ecr_access_key
#      secret_key:
#        from_secret: ecr_secret_key
#      repo: gn-api-me
#      region: ap-southeast-1
#      registry:
#        from_secret: ecr_registry
#      auto_tag: true
#      daemon_off: false
#      dockerfile: Dockerfile
#    when:
#      event:
#        exclude:
#        - pull_request